name: Release

on: 
  workflow_dispatch:
#  push:
#    tags:
#      - '*'

jobs:
  build-release:
    name: build-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - build: linux-x86_64
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: nisabo
            asset_name: nisabo_x86_64-unknown-linux-gnu
            use-cross: false
          - build: linux-musl
            os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            artifact_name: nisabo
            asset_name: nisabo_x86_64-unknown-linux-musl
            use-cross: false
          - build: x86_64-pc-windows-gnu
            os: windows-latest
            target: x86_64-pc-windows-gnu
            artifact_name: nisabo.exe
            asset_name: nisabo_x86_64-pc-windows-gnu.exe
            use-cross: false
          - build: macos-x86_64
            os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: nisabo
            asset_name: nisabo_x86_64-apple-darwin
            use-cross: false

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4.1.0

    - name: Install MUSL tools
      if: matrix.target == 'x86_64-unknown-linux-musl'
      run: sudo apt update && sudo apt install -y musl-tools

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        override: true
        target: ${{ matrix.target }}
    
    - name: Add mingw64 to path for x86_64-gnu
      if: matrix.os == 'windows-latest'
      run: echo "$env:Path;C:\msys64\mingw64\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8
      shell: pwsh

    - name: Build
      run: cargo build --release --locked --target ${{ matrix.target }}
    
    # UPX for linux
    - name: run UPX on Linux
      if: matrix.os == 'ubuntu-latest'
      uses: crazy-max/ghaction-upx@v3
      with:
        version: latest
        files: |
          target/${{ matrix.target }}/release/nisabo
        args: --best --lzma

    # experimental part for UPX
    - name: run UPX on Windows
      if: matrix.os == 'windows-latest'
      uses: crazy-max/ghaction-upx@v3
      with:
        version: latest
        files: |
          target/${{ matrix.target }}/release/nisabo.exe
        args: --best --lzma

    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
        asset_name: ${{ matrix.asset_name }}
        tag: ${{ github.ref }}
        check_duplicates: true
